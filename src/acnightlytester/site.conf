# ************************************************************
# * Configuration File for NightlyTester script for ArchC  ***
# * Checkout ArchC source in SVN and tests current version ***
# ************************************************************
#
# ArchC Team

# ****************************
# * Tests switches (yes/no) **
# ****************************

RUN_ARM_ACSIM=yes
RUN_MIPS_ACSIM=yes
RUN_SPARC_ACSIM=yes
RUN_POWERPC_ACSIM=yes
RUN_ARM_ACCSIM=no
RUN_MIPS_ACCSIM=no
RUN_SPARC_ACCSIM=no
RUN_POWERPC_ACCSIM=no
RUN_ARM_ACASM=no
RUN_MIPS_ACASM=no
RUN_SPARC_ACASM=no
RUN_POWERPC_ACASM=no


# *************************************
# * AcStone Execution Configuration ***
# *************************************

# This also decides whether gdb will be compiled, because only acstone needs it.
# Is mandatory to set the CROSS COMPILERS PATH 
RUN_ACSTONE=no

# *************************************
# * PowerSC Execution Configuration ***
# *************************************

# Energy Consumption 
# Run with ACSIM model enabled above
# Is mandatory to set the POWERSC PATH (a.k.a SystemC Source Path)
RUN_POWERSC=yes

# Use collect stats to display information about instruction usage by types
# in benchmarks
COLLECT_STATS=no  # SEG FAULT when YES

# This option deletes all created files for the test framework, with the
# exception of log files.
DELETEWHENDONE=yes

# *************************
# * Revision message     **
# *************************
# Describe below the reason for launching the test. It may be blank.
# This is included in the log main page to help document the current test.
REVMESSAGE="Testing git repositories... "

# *************************
# * General parameters   **
# *************************

SCRIPTROOT=`pwd`
TESTROOT=${SCRIPTROOT}/TEMP${RANDOM}
LOGROOT=${SCRIPTROOT}/public_html
HTMLINDEX=${LOGROOT}/index.htm

# If you want to test an ArchC version stored in a SVN link, set "CHECKOUTLINK"
# with the appropriate repository. If you need to test a private working copy
# stored in a local directory, please set "WORKINGCOPY" with the correct directory.
CLONELINK=git_archc:archc
#CHECKOUTLINK=http://lampiao.lsc.ic.unicamp.br/svn/archc-prj/archc/trunk/
#WORKINGCOPY=/home/max/ArchC/archc-oficial/*

# If you want to test an Model version stored in a GIT link, set "MODELGITLINK" 
# with the appropriate repository. If you need to test a private working copy
# stored in a local directory, please set "MODELWORKINGCOPY" with the correct directory.
ARMGITLINK=git_archc:arm
#ARMWORKINGCOPY=/home/max/ArchC/processors/site/arm/*
SPARCGITLINK=git_archc:sparc
#SPARCWORKINGCOPY=/home/max/ArchC/processors/site/sparc/*
MIPSGITLINK=git_archc:mips
#MIPSWORKINGCOPY=/home/max/ArchC/processors/site/mips/*
POWERPCGITLINK=git_archc:powerpc
#POWERPCWORKINGCOPY=/home/max/ArchC/processors/site/powerpc/*

# Use LOCALSIMULATOR=yes to test a local simulator already created. 
# BE CAREFUL: The generator simulator (ACSIM, ACCSIM, ...) will not be called.
# All the source simulator must be in the working copy
LOCALSIMULATOR=no

# ArchC's acsim parameters used when building a model
# No need to include "--stats" if you already set "COLLECT_STATS" to "yes".
ACSIM_PARAMS="-nw -abi"
ACCSIM_PARAMS="-abi"

# Set the tools PATH
#SYSTEMCPATH=/home/max/ArchC/tools/systemc-2.3.0
#BINUTILSPATH=/home/max/ArchC/tools/binutils-2.24
#GDBPATH=/home/max/ArchC/tools/gdb-7.8
SYSTEMCPATH=/local/archc/acnightlytester/tools/systemc-2.3.0
BINUTILSPATH=/local/archc/acnightlytester/tools/binutils-2.19.1
GDBPATH=
POWERSCPATH=/local/archc/acnightlytester/tools/src/systemc-2.3.0

# Determine whether the benchmark will be compiled from source
# If "yes", is mandatory to set the CROSS COMPILERS PATH
COMPILE=no

# Set the CROSS compilers PATH
# Mantadoty if "COMPILE = yes" 
CROSS_MIPS=/home/max/x-tools/mips-newlib-elf/bin
CROSS_POWERPC=/home/max/x-tools/powerpc-newlib-elf/bin
CROSS_SPARC=/home/max/x-tools/sparc-newlib-elf/bin
CROSS_ARM=/home/max/x-tools/arm-newlib-eabi/bin
#CROSS_MIPS=/opt/archc/compilers/mips/bin
#CROSS_POWERPC=/opt/archc/compilers/powerpc/bin
#CROSS_SPARC=/opt/archc/compilers/sparc/bin
#CROSS_ARM=/opt/archc/compilers/arm/bin

CROSS_MIPS_FLAG="-specs=archc -msoft-float -static"
CROSS_POWERPC_FLAG="-specs=archc -msoft-float -static"
CROSS_SPARC_FLAG="-specs=archc -msoft-float -static"
CROSS_ARM_FLAG="-specs=archc -static" 


# *************************************
# * MiBench Execution Configuration ***
# *************************************


# Determine which Mibench programs to run in acsim for selected targets  
BASICMATH=yes # expensive
BITCOUNT=yes
QUICKSORT=yes
SUSAN=yes
ADPCM=yes
CRC=yes
FFT=yes # expensive
GSM=yes
DIJKSTRA=yes
PATRICIA=yes # expensive
RIJNDAEL=yes
SHA=yes
JPEG=yes
LAME=yes # expensive

# Determine what kind of inputs to use in Mibench for acsim
# Please note that large inputs may be significantly more expensive to run.
RUNSMALL=yes
RUNLARGE=yes  # expensive

# **************************************
# * SPEC2006 Execution Configuration ***
# **************************************

# All apps running over 'test' data
BZIP_2=no	
MCF=no		    
GOBMK=no    
HMMER=no      
SJENG=no 	  # Never end  
LIBQUANTUM=no
H264=no        
OMNETPP=no    
ASTAR=no      


